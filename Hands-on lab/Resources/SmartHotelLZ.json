{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "defaultValue": "[resourceGroup().location]"
        },
        "resourceGroup": {
            "type": "String",
            "defaultValue": "[resourceGroup().name]"
        },
        "baseName": {
            "type": "String",
            "defaultValue": "SmartHotel"
        },
        "virtualNetworkName": {
            "type": "String",
            "defaultValue": "[concat(parameters('baseName'),'VNet')]"
        },
        "WorkspaceName": {
            "type": "String",
            "defaultValue": "[concat(parameters('baseName'),'LA')]"
        },
        "bastionName": {
            "type": "String",
            "defaultValue": "[concat(parameters('baseName'),'Bastion')]"
        },
        "WAFName": {
            "type": "String",
            "defaultValue": "[concat(parameters('baseName'),'-WAF')]"
        },
        "SQLRGName": {
            "type": "String",
            "defaultValue": "[resourceGroup().name]"
        },
        "SQLDBName": {
            "type": "String",
            "defaultValue": "[toLower(concat(parameters('baseName'),'DB'))]"
        },
        "ddosProtectionPlanEnabled": {
            "type": "Bool",
            "defaultValue": false
        },
        "bastionEnabled": {
            "type": "Bool",
            "defaultValue": true
        },
        "WAFEnabled": {
            "type": "Bool",
            "defaultValue": true
        },
        "DeploySQLServer": {
            "type": "Bool",
            "defaultValue": true
        }
    },
    "variables": {
        "bastionPIPName": "[concat(parameters('BastionName'),'-ip')]",
        "WAFPIPName": "[concat(parameters('WAFName'),'-ip')]",
        "applicationGatewayId": "[resourceId('Microsoft.Network/applicationGateways', parameters('WAFName'))]",
        "sqlRgId": "[resourceId('Microsoft.Resources/resourceGroups',parameters('SQLRGName'))]",
        "SQLServerName": "[toLower(concat(parameters('baseName'),'sql',take(uniqueString(variables('sqlRgId')),5)))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2021-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/23"
                    ]
                },
                "subnets": [
                    {
                        "name": "SmartHotel",
                        "properties": {
                            "addressPrefix": "192.168.0.0/25"
                        }
                    },
                    {
                        "name": "SmartHotelDB",
                        "properties": {
                            "addressPrefix": "192.168.0.128/25"
                        }
                    },
                    {
                        "name": "SmartHotelWAF",
                        "properties": {
                            "addressPrefix": "192.168.1.0/26"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "192.168.1.192/26"
                        }
                    }
                ],
                "enableDdosProtection": "[parameters('ddosProtectionPlanEnabled')]"
            }
        }, 
        {
            "condition": "[parameters('bastionEnabled')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('bastionPIPName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "condition": "[parameters('bastionEnabled')]",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('bastionName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('virtualNetworkName')]",
                "[variables('bastionPIPName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', variables('bastionPIPName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "condition": "[parameters('WAFEnabled')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('WAFName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('WAFPIPName')]"
            ],
            "tags": {},
            "zones": [],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[concat(resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/SmartHotelWAF')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwPublicFrontendIp",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', variables('WAFPIPName'))]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "port_80",
                        "properties": {
                            "Port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "WebBackend",
                        "properties": {
                            "backendAddresses": []
                        }
                    }
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "SmartHotelHTTP",
                        "properties": {
                            "Port": 80,
                            "Protocol": "Http",
                            "cookieBasedAffinity": "Disabled",
                            "requestTimeout": 20
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "SmartHotelListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
                            },
                            "frontendPort": {
                                "id": "[concat(variables('applicationGatewayId'), '/frontendPorts/port_80')]"
                            },
                            "protocol": "Http",
                            "sslCertificate": null
                        }
                    }
                ],
                "requestRoutingRules": [
                    {
                        "Name": "SmartHotelApp",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('applicationGatewayId'), '/httpListeners/SmartHotelListener')]"
                            },
                            "priority": null,
                            "backendAddressPool": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendAddressPools/WebBackend')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('applicationGatewayId'), '/backendHttpSettingsCollection/SmartHotelHTTP')]"
                            }
                        }
                    }
                ],
                "enableHttp2": true,
                "sslCertificates": [],
                "probes": [],
                "autoscaleConfiguration": {
                    "minCapacity": 0,
                    "maxCapacity": 2
                }
            }
        },
        {
            "condition": "[parameters('WAFEnabled')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('WAFPIPName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": [],
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2017-03-15-preview",
            "name": "[parameters('WorkspaceName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "sku": {
                    "name": "pergb2018"
                }
            }
        },
        {
            "condition": "[parameters('DeploySQLServer')]",
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[variables('SQLServerName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "administratorLogin": "demouser",
                "administratorLoginPassword": "demo!pass123",
                "version": "12.0",
                "minimalTlsVersion": "1.2"
            },
            "resources": [
                {
                    "type": "databases",
                    "apiVersion": "2021-02-01-preview",
                    "name": "[parameters('SQLDBName')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ],
                    "tags": {},
                    "sku": {
                        "name": "S0",
                        "tier": "Standard"
                    },
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": 268435456000,
                        "sampleName": "",
                        "zoneRedundant": false,
                        "licenseType": "",
                        "readScale": "Disabled",
                        "highAvailabilityReplicaCount": 0,
                        "minCapacity": "",
                        "autoPauseDelay": "",
                        "requestedBackupStorageRedundancy": "Geo",
                        "isLedgerOn": false
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "name": "AllowAllWindowsAzureIps",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                },
                {
                    "type": "connectionPolicies",
                    "apiVersion": "2014-04-01",
                    "name": "Default",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', variables('SQLServerName'))]"
                    ],
                    "properties": {
                        "connectionType": "Default"
                    }
                }
            ]
        }
    ]
}